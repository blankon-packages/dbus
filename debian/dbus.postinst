#!/bin/sh
# Copyright © 2003 Colin Walters <walters@debian.org>
# Copyright © 2006 Sjoerd Simons <sjoerd@debian.org>

set -e

MESSAGEUSER=messagebus
MESSAGEHOME=/var/run/dbus
LAUNCHER=/usr/lib/dbus-1.0/dbus-daemon-launch-helper

# This is what the init script would do, but it's simpler (and less
# dependent on sysvinit vs. Upstart vs. etc.) if we do it directly.
reload_dbus_config() {
    [ -S /var/run/dbus/system_bus_socket ] || return 0

    if [ -e /run/dbus/dont-reload ]; then
        echo "dbus-daemon has been upgraded from a version with incompatible configuration." >&2
        echo "New configuration will be loaded after the next reboot." >&2
        return 0
    fi

    dbus-send --print-reply --system --type=method_call \
        --dest=org.freedesktop.DBus \
        / org.freedesktop.DBus.ReloadConfig > /dev/null || true
}


if [ "$1" = triggered ]; then
    reload_dbus_config
    exit 0
fi

if [ "$1" = configure ]; then
    adduser --system \
            --quiet \
            --home "$MESSAGEHOME" \
            --no-create-home \
            --disabled-password \
            --group "$MESSAGEUSER"

    if ! dpkg-statoverride --list "$LAUNCHER" >/dev/null; then
        dpkg-statoverride --update --add root "$MESSAGEUSER" 4754 "$LAUNCHER"
    fi

    # This is idempotent, so it's OK to do every time. The system bus' init
    # script does this anyway, but you also have to do this before a session
    # bus will work, so we do this here for the benefit of people starting
    # a temporary session bus in a chroot
    dbus-uuidgen --ensure
fi

# Remove stop symlinks for runlevel 1 as killprocs already does the job for us.
if [ "$1" = configure ] && dpkg --compare-versions "$2" lt-nl 1.2.24-1; then
    rm -f /etc/rc1.d/K??dbus
fi

if [ "$1" = configure ] && [ -n "$2" ]; then
    # On upgrades, we only reload config, and don't restart (restarting the
    # system bus is not supported by upstream). The code added by
    # dh_installinit -r creates a start action, below.

    # Recommend a reboot if there is a dbus-daemon running in the same root
    # as us. Deliberately not using anything init-related here, to be
    # init-agnostic: if we get a false positive (at least one dbus-daemon
    # is running but it isn't the system bus) that isn't the end of the
    # world, because it's probably a session bus, so the user needs to
    # log out and back in anyway.
    #
    # Debian has /usr/bin/dbus-daemon, Ubuntu has /bin/dbus-daemon.
    # Look for both.
    if pidof -c /bin/dbus-daemon /usr/bin/dbus-daemon >/dev/null; then
        echo "A reboot is required to replace the running dbus-daemon." >&2
        echo "Please reboot the system when convenient." >&2

        # trigger an update notification which recommends to reboot
        [ -x /usr/share/update-notifier/notify-reboot-required ] && \
            /usr/share/update-notifier/notify-reboot-required || true
    fi
fi

# Only reload if the running dbus-daemon would understand the new layout
# for bus setup and configuration.
if dpkg --compare-versions "$2" ge-nl 1.9.18~; then
    reload_dbus_config
elif [ -d /run/dbus ]; then
    touch /run/dbus/dont-reload
fi

#DEBHELPER#
